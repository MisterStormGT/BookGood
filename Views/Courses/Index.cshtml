
@model PaginatedList<ContosoUniversity.Models.Course>

@{ ViewData["Title"] = "Courses"; }

<h2>Курсы</h2>
@Html.ActionLink("Изменить Кредиты Курса", "UpdateCourseCredits", "Courses")
<p>
    <a asp-action="Create">Создать новый курс</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-action no-color">
        <p>
            Найти по названию курса:<input type="text" name="searchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-success" />
            <a asp-action="Index">Вернуться обратно к списку</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                ID
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Название</a>

            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CreditsSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Кредит</a>

            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DepartamentSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Отделение</a>

            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.CourseId)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Title)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Credits)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Department.Name)
    </td>
    <td>
        <a asp-action="Edit" asp-route-id="@item.CourseId">Изменить</a> |
        <a asp-action="Details" asp-route-id="@item.CourseId">Детали о курсе</a> |
        <a asp-action="Delete" asp-route-id="@item.CourseId">Удалить</a>
    </td>
</tr>}
    </tbody>
</table>
@{ var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : ""; }

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex-1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Предыдущая страница
</a>

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex+1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Следующая страница
</a>